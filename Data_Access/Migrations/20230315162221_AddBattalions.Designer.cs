// <auto-generated />
using System;
using Data_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access.Migrations
{
    [DbContext(typeof(StandOfGloryDbContext))]
    [Migration("20230315162221_AddBattalions")]
    partial class AddBattalions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessLogic.Entities.Battalion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Battalions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dzhokhar Dudayev Battalion"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Skala Battalion"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sheikh Mansur Battalion"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chechen volunteers on the side of Ukraine"
                        });
                });

            modelBuilder.Entity("BusinessLogic.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Number")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("BusinessLogic.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Odesa"
                        });
                });

            modelBuilder.Entity("BusinessLogic.Entities.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BattalionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Story")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BattalionId");

                    b.HasIndex("CardId");

                    b.HasIndex("CityId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("BusinessLogic.Entities.Hero", b =>
                {
                    b.HasOne("BusinessLogic.Entities.Battalion", "Battalion")
                        .WithMany("Heroes")
                        .HasForeignKey("BattalionId");

                    b.HasOne("BusinessLogic.Entities.Card", "Card")
                        .WithMany("Heroes")
                        .HasForeignKey("CardId");

                    b.HasOne("BusinessLogic.Entities.City", "City")
                        .WithMany("Heroes")
                        .HasForeignKey("CityId");

                    b.Navigation("Battalion");

                    b.Navigation("Card");

                    b.Navigation("City");
                });

            modelBuilder.Entity("BusinessLogic.Entities.Battalion", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("BusinessLogic.Entities.Card", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("BusinessLogic.Entities.City", b =>
                {
                    b.Navigation("Heroes");
                });
#pragma warning restore 612, 618
        }
    }
}
